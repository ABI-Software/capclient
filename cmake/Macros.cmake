
# CAP Client Macros

MACRO( DEFINE_ARCHITECTURE_DIR )
	STRING( TOLOWER ${CMAKE_SYSTEM_NAME} OPERATING_SYSTEM ) 
	IF(CMAKE_CL_64)
		SET( ARCHITECTURE_DIR ${CMAKE_SYSTEM_PROCESSOR}_64-${OPERATING_SYSTEM} )
	ELSE(CMAKE_CL_64)
		SET( ARCHITECTURE_DIR ${CMAKE_SYSTEM_PROCESSOR}-${OPERATING_SYSTEM} )
	ENDIF(CMAKE_CL_64)
ENDMACRO( DEFINE_ARCHITECTURE_DIR )

MACRO( OPTION_WITH_DEFAULT OPTION_NAME OPTION_STRING OPTION_DEFAULT )
	IF( NOT DEFINED ${OPTION_NAME} )
		SET( ${OPTION_NAME} ${OPTION_DEFAULT} )
	ENDIF( NOT DEFINED ${OPTION_NAME} )

	OPTION( ${OPTION_NAME} "${OPTION_STRING}" ${${OPTION_NAME}} )
ENDMACRO( OPTION_WITH_DEFAULT OPTION_NAME OPTION_STRING OPTION_DEFAULT )

MACRO( CACHE_VAR_WITH_DEFAULT OPTION_NAME OPTION_DEFAULT OPTION_TYPE OPTION_STRING )
	IF( NOT DEFINED ${OPTION_NAME} )
		SET( ${OPTION_NAME} ${OPTION_DEFAULT} )
	ENDIF( NOT DEFINED ${OPTION_NAME} )

	SET( ${OPTION_NAME} "${OPTION_DEFAULT}" CACHE ${OPTION_TYPE} "${OPTION_STRING}" )
ENDMACRO( CACHE_VAR_WITH_DEFAULT OPTION_NAME OPTION_DEFAULT OPTION_TYPE OPTION_STRING )

MACRO( SET_TRUE_IF_NOT_DEFINED VARIABLE )
	IF( NOT DEFINED ${VARIABLE} )
		SET( ${VARIABLE} TRUE )
	ENDIF( NOT DEFINED ${VARIABLE} )
ENDMACRO( SET_TRUE_IF_NOT_DEFINED VARIABLE )

MACRO( SET_FALSE_IF_NOT_DEFINED VARIABLE )
	IF( NOT DEFINED ${VARIABLE} )
		SET( ${VARIABLE} FALSE )
	ENDIF( NOT DEFINED ${VARIABLE} )
ENDMACRO( SET_FALSE_IF_NOT_DEFINED VARIABLE )

# CAP Client Functions

FUNCTION( XRC_TO_CPP XRC_SRCS _OUTFILES )
	# Have to do each .xrc file individually if I want separate
	# .cpp/.h files.  Which I do.
	FOREACH( XRC_SRC ${XRC_SRCS} )
		GET_FILENAME_COMPONENT(XRC_SRC_ABS ${XRC_SRC} ABSOLUTE)
		GET_FILENAME_COMPONENT(XRC_SRC_FILE ${XRC_SRC} NAME)
		GET_FILENAME_COMPONENT(XRC_SRC_FCN ${XRC_SRC} NAME_WE)
		GET_FILENAME_COMPONENT(XRC_SRC_PATH ${XRC_SRC} PATH)
		GET_FILENAME_COMPONENT(XRC_SRC_EXT ${XRC_SRC} EXT)

		STRING( REPLACE "${XRC_SRC_EXT}" ".cpp" XRC_CPP_SRC "${XRC_SRC}" )
		SET( XRC_CPP_SRC "${PROJECT_BINARY_DIR}/${XRC_CPP_SRC}" )
		STRING( REPLACE ".cpp" ".h" XRC_CPP_HDR "${XRC_CPP_SRC}" )

		# My replacement for the WXWIDGETS_ADD_RESOURCE function
		LIST(APPEND WXRC_OUTPUT "${XRC_CPP_SRC}" "${XRC_CPP_HDR}")
		SET_SOURCE_FILES_PROPERTIES("${XRC_CPP_HDR}"
			PROPERTIES GENERATED TRUE)
		ADD_CUSTOM_COMMAND(OUTPUT "${XRC_CPP_SRC}" "${XRC_CPP_HDR}"
			COMMAND cmake -E make_directory ${PROJECT_BINARY_DIR}/${XRC_SRC_PATH}
			COMMAND cmake -E chdir ${PROJECT_BINARY_DIR}/${XRC_SRC_PATH} ${wxWidgets_wxrc_EXECUTABLE} 
				--cpp-code --extra-cpp-code --output=${XRC_CPP_SRC} ${XRC_SRC_ABS} --function=wxXmlInit_${XRC_SRC_FCN}
			DEPENDS ${XRC_SRC_ABS})
	ENDFOREACH( XRC_SRC ${XRC_SRCS} )

	SET( ${_OUTFILES} ${WXRC_OUTPUT} PARENT_SCOPE )
ENDFUNCTION( XRC_TO_CPP XRC_SRCS _OUTFILES )

